import pandas as pd 
import csv
import numpy as np 

sales_df = pd.read_csv("sales_data.csv")
customer_df= pd.read_csv("customer_data.csv")

# print(sales_df.head())
# print(customer_df.head())

#########How do you merge sales_data.csv and customer_data.csv based on Customer_ID?

merged_df = pd.merge(sales_df, customer_df, on="Customer_ID", how="inner")
# print(merged_df.head()) 

#    Order_ID   Product  Quantity  Price  Order_Date Customer_ID        Name  Age  Location  Gender
# 0       101    Laptop         2    800  2024-01-15        C001    John Doe   35  New York    Male
# 1       102     Mouse         5     20  2024-02-10        C002  Jane Smith   28   Chicago  Female
# 2       103  Keyboard         3     50  2024-01-20        C003   Sam Brown   42   Houston    Male
# 3       104   Monitor         1    300  2024-03-05        C001    John Doe   35  New York    Male
# 4       105    Laptop         1    850  2024-02-25        C004    Lisa Ray   31  New York  Female


#####Find all orders where the price is greater than 100 and the customer is from 'New York'.

get_data = merged_df[(merged_df['Price']>100) & (merged_df['Location']=="New York")]
# print(get_data)


###########Calculate the total revenue (Quantity * Price) generated by each product.
sales_df['Total_Revenue'] = sales_df['Quantity'] * sales_df["Price"]
# print(sales_df)

# Group by Product
product_revenue = sales_df.groupby("Product")["Total_Revenue"].sum().reset_index()

# print(product_revenue)


######### Convert Order_Date to datetime
sales_df['Order_Date'] = pd.to_datetime(sales_df['Order_Date'])

jan_orders = sales_df[sales_df['Order_Date'].dt.strftime("%Y-%m") == "2024-01"]

# print(len(jan_orders))


#########Sort the merged DataFrame based on Order_Date in descending order.

sorted_data = merged_df.sort_values(by="Order_Date",ascending=False)
# print(sorted_data)

##################If there are missing values in the Age column, fill them with the average age.
customer_df['Age'].fillna(customer_df['Age'].mean())

# print(customer_df)



##############Question:Create a pivot table that shows total revenue per Location and Product.

# Create pivot table
merged_df['Total_Revenue'] = merged_df['Quantity'] * merged_df['Price']
pivot_table = merged_df.pivot_table(values="Total_Revenue", index="Location", columns="Product", aggfunc="sum")

# print(pivot_table)

# Product   Keyboard  Laptop  Monitor  Mouse
# Location
# Chicago        NaN     NaN      NaN  100.0
# Houston      150.0     NaN      NaN    NaN
# New York       NaN  2450.0    300.0    NaN


############Write a lambda function to create a new column Discount that gives a 10% discount if Total_Cost is greater than 500.
sales_df['Discount'] = sales_df['Price'].apply(lambda x:x*0.1 if x>500 else 0)
print(sales_df)